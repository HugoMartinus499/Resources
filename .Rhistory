knitr::opts_chunk$set(echo = TRUE)
# we recommend running this is a fresh R session or restarting your current session
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
knitr::opts_chunk$set(echo = TRUE)
# install.packages("remotes")
remotes::install_github("stan-dev/cmdstanr")
cmdstanr::install_cmdstan()
cmdstanr::check_cmdstan_toolchain(fix = TRUE)
cmdstanr::install_cmdstan()
install.packages(c("coda","mvtnorm","devtools","loo","dagitty","shape"))
devtools::install_github("rmcelreath/rethinking")
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("coda","mvtnorm","devtools","loo","dagitty","shape"))
devtools::install_github("rmcelreath/rethinking")
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("coda","mvtnorm","devtools","loo","dagitty","shape"))
devtools::install_github("rmcelreath/rethinking")
install.packages(c("coda", "mvtnorm", "devtools", "loo", "dagitty", "shape"))
knitr::opts_chunk$set(echo = TRUE)
library(rethinking)
# Grid Approximation
# define grid
p_grid = seq(from = 0, to = 1, length.out=20)
# define prior
prior = rep(1, 20)
# compute likelihood at each value in grid
likelihood = dbinom(6, size = 9, prob = p_grid)
# compute product of likelihood and prior
unstd.posterior = likelihood * prior
# standardize the posterior so it sums to 1
posterior = unstd.posterior / sum(unstd.posterior)
# plot the distribution
plot(p_grid, posterior, type = "b",
xlab = "probability of water", ylab = "posterior_probability")
mtext("20 points")
